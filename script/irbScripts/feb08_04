 def fetchbooks

        @id = [ ]
        @table_name = [ ]
        @column_name = [ ]
        @filtersBookslistid = [ ]

        for i in (0..@filterdetails.length-1)
        @id << @filterdetails.flatten[i].filter_id
        @table_name << @filterdetails.flatten[i].filter_table_name
        @column_name << @filterdetails.flatten[i].filter_table_column

        conditions = [[]]

        conditions[0] << @column_name[i]
        conditions[0] << ' IN  ('
        conditions[0] << @id[i]
        conditions[0] << ')'

        conditions[0] = conditions[0].join

        filtersBookslistid = Array.new

        filtersBookslistid << @table_name[i].constantize.find(:all, :select => 'books_list_id', :conditions => conditions[0])

        joinSetBookslistsid(filtersBookslistid)

        end

        @books =  BooksList.find(:all, :conditions => ["books_list_id IN (?)", @bookslistid.flatten.map { |v| v.books_list_id.to_i }] )

    end

  def joinSetBookslistsid(filtersBookslistid)

    countHash = filtersBookslistid.flatten(1).inject(Hash.new(0)) { |h,v| h[v] += 1; h }

   (countHash.values.max).downto(1)  { |i|
     @bookslistid << countHash.select {|k,v| v == i}.keys
   }

  end

